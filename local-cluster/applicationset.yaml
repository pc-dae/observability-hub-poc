apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: cluster-services
  namespace: argocd
spec:
  generators:
  - list:
      elements:
      - name: ingress-nginx
        namespace: ingress-nginx
        chart: ingress-nginx
        repo: https://kubernetes.github.io/ingress-nginx
        version: 4.12.0
        values:
          controller:
            service:
              annotations:
                external-dns.alpha.kubernetes.io/hostname: '{{.dnsSuffix}}'
            ingressClassResource:
              default: "true"
            watchIngressWithoutClass: "true"
      - name: vault
        namespace: vault
        chart: vault
        repo: https://helm.releases.hashicorp.com
        version: 0.29.1
        values:
          global:
            enabled: true
          csi:
            enabled: true
          injector:
            enabled: true
          server:
            enabled: true
            dataStorage:
              storageClass: '{{.storageClass}}'
            serviceAccount:
              name: vault
            standalone:
              config: |
                ui = true
                listener "tcp" {
                  tls_disable = 1
                  address = "[::]:8200"
                  cluster_address = "[::]:8201"
                }
                storage "file" {
                  path = "/vault/data"
                }
            ingress:
              enabled: true
              ingressClassName: nginx
              annotations:
                cert-manager.io/cluster-issuer: local-ca-issuer
              tls:
                - secretName: vault-tls
                  hosts:
                    - vault.{{.dnsSuffix}}
              hosts:
                - host: vault.{{.dnsSuffix}}
            extraVolumes:
            - type: configMap
              name: local-ca
            extraVolumeMounts:
            - name: local-ca
              mountPath: /etc/ssl/certs/local-ca.pem
              subPath: CA.cer
              readOnly: false
            hostAliases:
            - ip: '{{.clusterIP}}'
              hostnames:
              - vault.{{.dnsSuffix}}
      - name: grafana
        namespace: grafana
        chart: grafana
        repo: https://grafana.github.io/helm-charts
        version: 6.58.5
        values:
          adminPassword: "admin"
          ingress:
            enabled: true
            hosts:
              - grafana.{{.dnsSuffix}}
          datasources:
            datasources.yaml:
              apiVersion: 1
              datasources:
                - name: Mimir
                  type: prometheus
                  url: http://mimir.monitoring.svc.cluster.local/prometheus
                  access: proxy
                  isDefault: true
                - name: Loki
                  type: loki
                  url: http://loki.monitoring.svc.cluster.local/loki
                  access: proxy
                - name: Tempo
                  type: tempo
                  url: http://tempo.monitoring.svc.cluster.local
                  access: proxy
  - git:
      repoURL: 'https://github.com/pc-dae/observability-hub-poc.git'
      revision: main
      files:
      - path: "local-cluster/config/cluster-params.yaml"
  template:
    metadata:
      name: '{{.name}}'
      namespace: argocd
    spec:
      project: default
      source:
        repoURL: '{{.repo}}'
        chart: '{{.chart}}'
        targetRevision: '{{.version}}'
        helm:
          values: |
            {{- toYaml .values | nindent 12 }}
      destination:
        server: 'https://kubernetes.default.svc'
        namespace: '{{.namespace}}'
      syncPolicy:
        automated:
          prune: true
          selfHeal: true
        syncOptions:
        - CreateNamespace=true
